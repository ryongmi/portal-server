# version: '3.8'
services:
  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - "3050:80"
  #   depends_on:
  #     - backend
  #     - frontend
  mysql:
    image: mysql:8
    container_name: portal-mysql
    ports:
      - 3309:3306
    env_file:
      - ./envs/.env.local
    environment:
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_general_ci
      - MYSQL_TIMEZONE=Asia/Seoul
      - TZ=Asia/Seoul
    volumes:
      - ./data/mysql:/var/lib/mysql
      # - ./config/mysql/my.cnf:/etc/mysql/my.cnf
      # - ./config/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - portal-network

  redis:
    image: redis:alpine
    container_name: portal-redis
    ports:
      - 6382:6379
    env_file:
      - ./envs/.env.local
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./data/redis:/data
    networks:
      - portal-network
    command: ['redis-server', '--requirepass', '1234qwer']
    depends_on:
      - mysql

  server:
    image: krgeobuk/portal-server:local
    container_name: portal-server
    build:
      context: .
      dockerfile: Dockerfile
      target: local
    ports:
      - 8200:8200
      - 9231:9229 # Node.js 디버깅 포트
    env_file:
      - ./envs/.env.local
    environment:
      - TZ=Asia/Seoul
      - NODE_OPTIONS=--experimental-specifier-resolution=node
    volumes:
      - ./src:/app/src:cached # 소스 코드 동기화
      - ./logs:/app/logs # Log 동기화
      - ./tsconfig.json:/app/tsconfig.json # tsconfig도 동기화
      - ./nodemon.json:/app/nodemon.json # nodemon 설정도 동기화
      - /app/dist
      - /app/node_modules # 익명 볼륨
    networks:
      - portal-network
      - msa-network
      - shared-network
    depends_on:
      - redis
      - mysql

networks:
  portal-network:
    driver: bridge
  msa-network:
    external: true
  shared-network:
    external: true
