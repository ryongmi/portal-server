# version: '3.8'
services:
  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   restart: always
  #   ports:
  #     - "3050:80"
  #   depends_on:
  #     - backend
  #     - frontend
  mysql:
    image: mysql:8
    container_name: auth-mysql
    restart: unless-stopped
    volumes:
      - ./data/mysqldata:/var/lib/mysql
      # - ./config:/etc/mysql/conf.d # my.cnf 파일을 컨테이너에 복사
    command:
      - --bind-address=0.0.0.0 # MySQL 시작 시 bind-address를 0.0.0.0으로 설정
    ports: []
    env_file:
      - ./envs/env.prod
    # networks:
    #   - network-auth

  redis:
    image: redis:alpine
    container_name: auth-redis
    restart: unless-stopped
    volumes:
      - ./data/redisdata:/data
      # - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./envs/env.prod
    # networks:
    #   - network-auth
    # command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    # CMD [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports: []
    depends_on:
      - mysql

  server:
    image: krgeobuk/auth-server:prod
    container_name: auth-server
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: prodution
    volumes:
      - ./logs:/app/logs # Log 동기화
    # networks:
    #   - network-auth
    ports: []
    env_file:
      - ./envs/env.prod
    environment:
      - TZ=Asia/Seoul
    # depends_on:
    #   - redis
    #   - mysql

networks:
  network-auth:
    driver: bridge
  network-shared:
    external: true
